<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">

	<!-- 核心事务管理器 -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 配置通知类 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="persist*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="modify*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="remove*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="get*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="true" />
			<tx:method name="*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置织入 -->

	<aop:config>
		<aop:pointcut
			expression="execution(* com.Draymond.service.impl.*ServiceImpl.*(..))"
			id="txPc" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc" />
	</aop:config>
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc" />
	</aop:config>


	<!-- 指定Spring读取db.properties -->
	<context:property-placeholder
		location="classpath:db.properties" />

	<!-- 配置C3P0 -->
	<bean name="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>


	<!-- 讲SessionFactory配置到spring容器当中 -->
	<bean name="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 讲连接池注入到sessionFactory,hibernate会通过连接池获得连接 -->
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>

				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>

		<!-- 引入orm元素,指定orm元数据的所在包路径，spring自动读取包中的所有配置 -->
		<property name="mappingDirectoryLocations"
			value="classpath:com/Draymond/domain" />
	</bean>




	<!-- action -->
	<bean name="userAction" class="com.Draymond.action.UserAction"
		scope="prototype">
		<property name="us" ref="userService"></property>
	</bean>
	<bean name="movieAction" class="com.Draymond.action.MovieAction">
		<property name="ms" ref="movieService"></property>
	</bean>


	<!-- service层 -->
	<bean name="userService"
		class="com.Draymond.service.impl.UserServiceImpl">
		<property name="ud" ref="userDao"></property>
	</bean>
	<bean name="movieService"
		class="com.Draymond.service.impl.MovieServiceImpl">
		<property name="md" ref="movieDao"></property>
	</bean>


	<!-- dao层 -->
	<bean name="userDao" class="com.Draymond.dao.impl.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="movieDao" class="com.Draymond.dao.impl.MovieDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>


	<!-- 定时器 -->
	<bean id="TestCRON" class="com.Draymond.quartz.TestCRON" >
	</bean>
	
	
	<bean id="jobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="TestCRON" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="simpleTrigger"
		class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<!-- see the example of method invoking job above -->
		<property name="jobDetail" ref="jobDetail" />
		<!-- 10 seconds -->
		<property name="startDelay" value="10000" />
		<!-- repeat every 50 seconds -->
		<property name="repeatInterval" value="20000" />
	</bean>

	<bean
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
			</list>
		</property>
	</bean>
	
	
</beans>